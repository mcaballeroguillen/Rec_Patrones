datos <- read.csv("/home/marco/Gits/Patrones/xdata0.csv")
datos <- read.csv("/home/marco/Gits/Patrones/xdata0.csv", header = False)
datos <- read.csv("/home/marco/Gits/Patrones/xdata0.csv", header = FALSE)
ydatos <- read.csv("/home/marco/Gits/Patrones/ydata.csv", header = FALSE)
datos <- read.csv("/home/marco/Gits/Patrones/xdata0.csv", header = FALSE)
ydatos <- read.csv("/home/marco/Gits/Patrones/ydata.csv", header = FALSE)
colnames(ydatos)[1]<-"num"
ydatos$num= factor(ydatos$num)
union <- cbind(datos,ydatos)
View(union)
View(union)
ydatos <- read.csv("/home/marco/Gits/Patrones/ydata.csv", header = FALSE)
colnames(ydatos)[1]<-"num"
ydatos[num] <- as.factor(ydatos[num])
ydatos["num"] <- as.factor(ydatos["num"])
ydatos$num= factor(ydatos$num)
union <- cbind(datos,ydatos)
target <- "num"
vars <- names(union)
form <- as.formula(paste(target, "~ ."))
train <- sample(nrow(union), 0.7*nrow(union))
test  <- setdiff(seq_len(nrow(union)), train)
library("wsrf")
model.wsrf <- wsrf(form, data=ds[train, vars], parallel=FALSE)
model.wsrf <- wsrf(form, data=union[train, vars], parallel=FALSE)
print(model.wsrf)
res <- predict(model.wsrf, newdata=union[test, vars], type=c("response", "waprob"))
actual <- ds[test, target]
actual <- union[test, target]
(accuracy.wsrf <- mean(res$response==actual))
library(randomForest)
library(randomForest)
model2 <- randomForest(form, data = union[train,vars], ntree = 500, mtry = 5, importance = TRUE)
print(model2)
res.norm <- predict(model2, newdata=union[test, vars], type=c("response", "waprob"))
(accuracy.norm <- mean(res.norm$response==actual))
(accuracy.norm <- mean(res.norm==actual))
savehistory("~/Gits/Patrones/Frecuencias.Rhistory")
